# C_sharp
#ZAD1# Sprawdź, które spośród danych liczb są liczbami pierwszymi. n - liczba testów n<100000, w kolejnych liniach n liczb z przedziału [1..10000].

 static void Main(string[] args)
        {
            int N, i, m = 0, flag = 0;
            Random losowa = new Random();

            Console.Write("Podaj promień ilośc testów\n> ");
            N = Convert.ToInt32(Console.ReadLine());
            
            int[] tablica = new int[N];
            Console.WriteLine("\n");

            for (int j = 0; j < N; j++)
            {
                tablica[j] = losowa.Next(1, 20);
                Console.WriteLine(tablica[j]);
            }

            for (int j = 0; j < N; j++)
            {
                flag = 0;

                m = tablica[j] / 2;

                for (i = 2; i <= m; i++)
                {
                    if (tablica[j] % i == 0)
                    {
                        Console.WriteLine("{0} Liczba losowa {1} nie liczbą pierwszą.", j+1, tablica[j]);
                        flag = 1;
                        break;
                    }
                }
                if (flag == 0)
                    Console.WriteLine("{0} Liczba losowa {1} jest liczbą pierwszą.", j+1, tablica[j]);
            } 
        }
#ZAD2# Cesar cipher
static void Main(string[] args)
        {
            char[] alphabet = new char[] { 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z' };
            Console.WriteLine("type a message to encrypt it.");
            string msg = Console.ReadLine();
            string message=msg.ToUpper();
          // Console.WriteLine(message);
            
            
            string[] charactersToReplace = new string[] { @"\N"};
            foreach (string s in charactersToReplace)
            {
                message = message.Replace(s, "");
            }
            

           
            char[] secretMessage = message.ToCharArray();
            char[] encryptedMessage = new char[secretMessage.Length];

            int i;
            for (i = 0; i < secretMessage.Length; i++)
            {
               
                char secretItem = secretMessage[i];

                if (secretMessage[i] != ' ')
                {
                    
                    int index = Array.IndexOf(alphabet, secretItem);  // this line
                    int letterPosition = (index += 3) % 26;  // this line


                    char encryptedCharacter = alphabet[letterPosition]; // this line now gets the encrypted character as a CHAR
                    encryptedMessage[i] = encryptedCharacter; // so we can just pop it directly into the encrypted message!
                }
               
            }

            string superSecretMessage = String.Join("", encryptedMessage);
            Console.Write(superSecretMessage);
           
        }
        
        #ZAD4#
